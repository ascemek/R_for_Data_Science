---
title: "Week 04 Problem Set: Data wrangling & transformation"
author: "R for Data Science"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)


library(tidyverse)

### may need to install this in console first!
library(lubridate) 

# import data
chicago <- readRDS("chicago.rds")

# Alternate:
# chicago <- read_csv("chicago.csv", col_types = list(col_character(), col_double(), col_double(), col_date(format = ""), col_double(), col_double(), col_double(), col_double()))

# backup: download the data from  http://www.biostat.jhsph.edu/~rpeng/leanpub/rprog/chicago_data.zip


```

## Some notes on dplyr

Check out the "DataTransformationSupplement" for information on 

+ Workflow with dplyr (saving vs printing)
+ Renaming variables
+ Recoding categorical variables
+ Turning quantitative variables into categorical variables using mutate() and case_when().


#### Some trouble-shooting tips:

+ These functions assume you are working with a tidy data frame. That is, each column represents one variable, and each row represents one case.
+ You may run into issues because other packages have similarly named functions (there are several functions called `select()`, for example). If R gives you trouble about recognizing the function name, you can explicitly refer to the function within `dplyr` using `::`. For example, `dplyr::select(my_data, var1)` tells R to use the `select()` function in `dplyr`. 
+ __Remember to save your data set if you modify it!__ If you filter or mutate without saving the data set, it will print out the results (all 4500 rows) but will not save the data for you to use. You will lose points if you accidentally print out the data set rather than saving it or only printing specified rows. 
  + Pro tip: Open your knitted html file and read it through BEFORE you submit the assignment. 

# Exercise 1

The data set `chicago`, which we imported in the set-up chunk, contains variables measuring air pollution and weather in Chicago. 

+ "city": the city abbreviation  
+ "tmpd": temperature (degress F)   
+ "dptp": Dewpoint   
+ "date": the date, ranging from Jan 1, 1987 to Dec 31, 2005
+ "pm25tmean2": a common pollution measure of fine particles. PM2.5 refers to the average concentration of atmospheric particulate matter that have a diameter of less than 2.5 micrometers; measured in micrograms per cubic meter
+ "pm10tmean2": another pollution measure, referring to the average concentration of atmospheric particulate matter with a diameter of less than 10 micrometers; measured in micrograms per cubic meter
+ "o3tmean2": ground level ozone (not sure of units?)
+ "no2tmean2": nitrogen dioxide (not sure of units?)

## Part a. 

a. Suppose we want to focus on the pollution variables (pm25tmean2, pm10tmean2, o3tmean2, and no2tmean2). Show at least two ways to keep only these columns in the data frame, while omitting the other columns. Print out the first three rows of the new data frame.

__Hint:__ For the second way, look through the help file for `starts_with()` and `ends_with()`. These are useful, when combined with `select()`!

__Your answer:__ 

```{r}

```


<br>

## Part b. 

b. Go back to the main data set (not the data set you created in part a. The variable names are unclear and complicated. Rename the following variables, and save the results in a new `chicago2` data frame. 

You will use this `chicago2` data for the remaining exercises in the problem set, though you may modify it further in future exercises. 

+ "tmpd": temp  
+ "dptp": dewpt   
+ "pm25tmean2": pm25
+ "pm10tmean2": pm10
+ "o3tmean2": ozone
+ "no2tmean2": no2

__Your answer:__ 

```{r}

```


<br>

## Part c.

c. Print out the dates, pm2.5 values, and ozone values only for the __five__ days with the highest pm2.5 concentration levels. The data should be sorted first by pm2.5 level and then by ozone level (highest values first). 

__Your answer:__ 

```{r}

```


<br>

## Part d. 

d. On how many days were the pm2.5 concentration greater than 35 and the ozone level greater than 18?  (Don't print out the data set-- just the number of days in the data set where this is true. Your answer should be a single number.)

__Your answer:__ 

```{r}

```


<br>

## Part e.

e. For how many days is the pm2.5 variable missing? Print the number of days for which this variable is missing. Your answer should be a single number. 

Intermediate challenge: In addition to the number of days with missing pm2.5 data, on those days when pm2.5 is missing, what other variables tend to be missing as well? That is, if you focus only on days with no pm2.5 reading, how many of those days are also missing other variables, such as temperature, ozone, or pm10?  Try to find a way to solve this that does not involve manually viewing the data and counting the days for each variable.  

__Your answer:__ 

```{r}

```


<br>

## Part f. 

f. Create a new variable, tempC, that measures the temperature in celsius. Recall that to convert a Fahrenheit temperature to Celsius, you need to deduct 32, then multiply by 5, then divide by 9. 

Make sure you will be able to use this variable again in the future with your data, by saving the new data set as chicagoC. Print out the first 4 rows of the Fahrenheit and Celsius temperatures only (not the other variables).

__Your answer:__ 

```{r}

```


<br>
<br>

# Exercise 2 


Continue working with the chicago2 data. Now we will step beyond the functions covered this week to see how they can be strengthened even more when combined with some other common functions in R. 

## Part a. 

a. Install the `lubridate` package in your console if needed, then load the package. Using the `year()` and `month()` functions to create new variables showing just the year and month, respectively. 

Hint: If you have a column of dates called DATES, then you can find the year for each date by using `year(DATES)`. 

__Your answer:__ 

```{r}

```


<br>

## Part b. 

b. Use mutate() and case_when() to create a categorical variable based on temperature. Call this variable "temp_cat". Again, make sure you will be able to use this variable in the future in the chicago2 data set. 


+ hot: temp > 90
+ warm: temp > 70 and <= 90
+ cool: temp > 50 and <=70
+ cold: temp > 32 and <= 50
+ freezing: temp <= 32


Hint: The week 03 problem set included an example of how to create a budget category variable similar to this. Check the setup code chunk in that assignment for more details, or check the "DataTransformationSupplement.html" file in this assignment folder. 



__Your answer:__ 

```{r}

```


<br>

## Part c. 

c. Use the data from the previous two steps to create a scatterplot of ozone and pm2.5, with a different color for each temperature category, faceted by year. 

__Your answer:__ 

```{r}

```


<br>



# Exercise 3: Intermediate

Intermediate students should also complete this problem in addition to the first two exercises. It is optional for introductory students.

Continue working with the chicago2 data you created in the previous question. At this point, you should have:

+ Renamed the variables to temp, dewpt, pm25, pm10, ozone, and n02. 
+ Created year and month variables using lubridate.
+ Created the temperature category variable.
+ Saved the results in a new data frame called "chicago2"

## Part a. 

a. Verify that there are 12 months listed for each year in the data set. In other words, double check that there is not a year when, for example, November or January were excluded. 

__Your answer:__ 

```{r}

```


<br>

## Part b.

b. Find the average pm2.5 count per year, for each year in the data set. It's good practice to also list the number of days each year for which the pm2.5 value was missing, and the number of days for which it was measured. 

To answer this question, create a summary table in which each row is a year and there are columns showing the year, average pm 2.5, number of non-missing pm 2.5 observations for that year, and number of missing pm 2.5 measurements for that year.

__Your answer:__ 

```{r}

```


<br>

## Part c.

c. Try to find the percent of days in each year with pm2.5 > 30. (You should have a separate percentage for each  year in the data set)


__Your answer:__ 

```{r}

```


<br>

## Part d. 

d. Recreate a scatterplot of pm2.5 (y) vs ozone (x), with the points on warmer days (temperature >= 80) colored red and all the other points colored grey.  Comment on what the graph shows, if anything, about how temperature is related to ozone and pm2.5. 

__Your answer:__ 

```{r}

```


<br>
